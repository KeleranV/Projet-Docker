version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
        #- "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=ovh"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=l.vansimay@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      # The HTTP port
      #- "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      # The HTTPS port
      - "443:443"

    environment:
      - OVH_ENDPOINT=${DNS_OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${DNS_OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${DNS_OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${DNS_OVH_CONSUMER_KEY}

    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
  #whoami:
    # A container that exposes an API to show its IP address
    #image: traefik/whoami
   #labels:
     # - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  nginx:
    image: nginx
    hostname: nginx
    volumes:
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/site/html5up-story:/home/site:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`www.projet.keleranv.ovh`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"


